[{"F:\\javaScript\\covid-dashboard\\covid-dashboard\\src\\index.js":"1","F:\\javaScript\\covid-dashboard\\covid-dashboard\\src\\reportWebVitals.js":"2","F:\\javaScript\\covid-dashboard\\covid-dashboard\\src\\redux\\store.js":"3","F:\\javaScript\\covid-dashboard\\covid-dashboard\\src\\App.js":"4","F:\\javaScript\\covid-dashboard\\covid-dashboard\\src\\redux\\countryList-reducer.js":"5","F:\\javaScript\\covid-dashboard\\covid-dashboard\\src\\components\\CovidMap\\CovidMapContainer.jsx":"6","F:\\javaScript\\covid-dashboard\\covid-dashboard\\src\\components\\CountryList\\CountryListContainer.jsx":"7","F:\\javaScript\\covid-dashboard\\covid-dashboard\\src\\components\\Header\\HeaderContainer.jsx":"8","F:\\javaScript\\covid-dashboard\\covid-dashboard\\src\\components\\CovidGraph\\CovidGraphContainer.jsx":"9","F:\\javaScript\\covid-dashboard\\covid-dashboard\\src\\components\\Footer\\FooterContainer.jsx":"10","F:\\javaScript\\covid-dashboard\\covid-dashboard\\src\\components\\GlobalCases\\GlobalCasesContainer.jsx":"11","F:\\javaScript\\covid-dashboard\\covid-dashboard\\src\\components\\CovidTable\\CovidTableContainer.jsx":"12","F:\\javaScript\\covid-dashboard\\covid-dashboard\\src\\redux\\countryList.js":"13","F:\\javaScript\\covid-dashboard\\covid-dashboard\\src\\redux\\countryInfoList.js":"14","F:\\javaScript\\covid-dashboard\\covid-dashboard\\src\\components\\CountryList\\CountryList.jsx":"15","F:\\javaScript\\covid-dashboard\\covid-dashboard\\src\\components\\CovidGraph\\CovidGraph.jsx":"16","F:\\javaScript\\covid-dashboard\\covid-dashboard\\src\\components\\Header\\Header.jsx":"17","F:\\javaScript\\covid-dashboard\\covid-dashboard\\src\\components\\CovidMap\\CovidMap.jsx":"18","F:\\javaScript\\covid-dashboard\\covid-dashboard\\src\\components\\CovidTable\\CovidTable.jsx":"19","F:\\javaScript\\covid-dashboard\\covid-dashboard\\src\\components\\GlobalCases\\GlobalCases.jsx":"20","F:\\javaScript\\covid-dashboard\\covid-dashboard\\src\\components\\Footer\\Footer.jsx":"21","F:\\javaScript\\covid-dashboard\\covid-dashboard\\src\\components\\CountryList\\CountrySearch\\CountrySearchContainer.jsx":"22","F:\\javaScript\\covid-dashboard\\covid-dashboard\\src\\components\\CovidTable\\CountryRecovered\\CountryRecoveredContainer.jsx":"23","F:\\javaScript\\covid-dashboard\\covid-dashboard\\src\\components\\CovidTable\\CountryDeaths\\CountryDeathsContainer.jsx":"24","F:\\javaScript\\covid-dashboard\\covid-dashboard\\src\\components\\CovidTable\\CountryLevel\\CountryLevelContainer.jsx":"25","F:\\javaScript\\covid-dashboard\\covid-dashboard\\src\\components\\CountryList\\CountrySearch\\CountrySearch.jsx":"26","F:\\javaScript\\covid-dashboard\\covid-dashboard\\src\\components\\CovidTable\\CountryDeaths\\CountryDeaths.jsx":"27","F:\\javaScript\\covid-dashboard\\covid-dashboard\\src\\components\\CovidTable\\CountryRecovered\\CountryRecovered.jsx":"28","F:\\javaScript\\covid-dashboard\\covid-dashboard\\src\\components\\CovidTable\\CountryLevel\\CountryLevel.jsx":"29","E:\\covid\\covid-dashboard\\covid-dashboard\\src\\index.js":"30","E:\\covid\\covid-dashboard\\covid-dashboard\\src\\reportWebVitals.js":"31","E:\\covid\\covid-dashboard\\covid-dashboard\\src\\redux\\store.js":"32","E:\\covid\\covid-dashboard\\covid-dashboard\\src\\App.js":"33","E:\\covid\\covid-dashboard\\covid-dashboard\\src\\redux\\countryList-reducer.js":"34","E:\\covid\\covid-dashboard\\covid-dashboard\\src\\components\\CountryList\\CountryListContainer.jsx":"35","E:\\covid\\covid-dashboard\\covid-dashboard\\src\\components\\CovidGraph\\CovidGraphContainer.jsx":"36","E:\\covid\\covid-dashboard\\covid-dashboard\\src\\components\\Footer\\FooterContainer.jsx":"37","E:\\covid\\covid-dashboard\\covid-dashboard\\src\\components\\CovidTable\\CovidTableContainer.jsx":"38","E:\\covid\\covid-dashboard\\covid-dashboard\\src\\components\\GlobalCases\\GlobalCasesContainer.jsx":"39","E:\\covid\\covid-dashboard\\covid-dashboard\\src\\components\\CovidMap\\CovidMapContainer.jsx":"40","E:\\covid\\covid-dashboard\\covid-dashboard\\src\\components\\Header\\HeaderContainer.jsx":"41","E:\\covid\\covid-dashboard\\covid-dashboard\\src\\redux\\countryList.js":"42","E:\\covid\\covid-dashboard\\covid-dashboard\\src\\redux\\countryInfoList.js":"43","E:\\covid\\covid-dashboard\\covid-dashboard\\src\\components\\Footer\\Footer.jsx":"44","E:\\covid\\covid-dashboard\\covid-dashboard\\src\\components\\Header\\Header.jsx":"45","E:\\covid\\covid-dashboard\\covid-dashboard\\src\\components\\CountryList\\CountryList.jsx":"46","E:\\covid\\covid-dashboard\\covid-dashboard\\src\\components\\CovidGraph\\CovidGraph.jsx":"47","E:\\covid\\covid-dashboard\\covid-dashboard\\src\\components\\CovidTable\\CovidTable.jsx":"48","E:\\covid\\covid-dashboard\\covid-dashboard\\src\\components\\GlobalCases\\GlobalCases.jsx":"49","E:\\covid\\covid-dashboard\\covid-dashboard\\src\\components\\CovidMap\\CovidMap.jsx":"50","E:\\covid\\covid-dashboard\\covid-dashboard\\src\\components\\CountryList\\CountrySearch\\CountrySearchContainer.jsx":"51","E:\\covid\\covid-dashboard\\covid-dashboard\\src\\components\\CovidTable\\CountryLevel\\CountryLevelContainer.jsx":"52","E:\\covid\\covid-dashboard\\covid-dashboard\\src\\components\\CovidTable\\CountryDeaths\\CountryDeathsContainer.jsx":"53","E:\\covid\\covid-dashboard\\covid-dashboard\\src\\components\\CovidTable\\CountryRecovered\\CountryRecoveredContainer.jsx":"54","E:\\covid\\covid-dashboard\\covid-dashboard\\src\\components\\CovidTable\\CountryLevel\\CountryLevel.jsx":"55","E:\\covid\\covid-dashboard\\covid-dashboard\\src\\components\\CovidTable\\CountryRecovered\\CountryRecovered.jsx":"56","E:\\covid\\covid-dashboard\\covid-dashboard\\src\\components\\CountryList\\CountrySearch\\CountrySearch.jsx":"57","E:\\covid\\covid-dashboard\\covid-dashboard\\src\\components\\CovidTable\\CountryDeaths\\CountryDeaths.jsx":"58","E:\\covid\\covid-dashboard\\covid-dashboard\\src\\components\\CountryList\\ListCountry\\ListCountry.jsx":"59","E:\\covid\\covid-dashboard\\covid-dashboard\\src\\components\\CountryList\\ListCountry\\ListCountryConteiner.jsx":"60"},{"size":645,"mtime":1608056473570,"results":"61","hashOfConfig":"62"},{"size":375,"mtime":1607609574926,"results":"63","hashOfConfig":"62"},{"size":335,"mtime":1608653925798,"results":"64","hashOfConfig":"62"},{"size":908,"mtime":1608828086682,"results":"65","hashOfConfig":"62"},{"size":5939,"mtime":1608653925796,"results":"66","hashOfConfig":"62"},{"size":818,"mtime":1608653925781,"results":"67","hashOfConfig":"62"},{"size":2431,"mtime":1608653925776,"results":"68","hashOfConfig":"62"},{"size":273,"mtime":1608056473566,"results":"69","hashOfConfig":"62"},{"size":473,"mtime":1608653925779,"results":"70","hashOfConfig":"62"},{"size":273,"mtime":1608653925792,"results":"71","hashOfConfig":"62"},{"size":403,"mtime":1608056473558,"results":"72","hashOfConfig":"62"},{"size":1679,"mtime":1608653925790,"results":"73","hashOfConfig":"62"},{"size":67397,"mtime":1608653925797,"results":"74","hashOfConfig":"62"},{"size":180671,"mtime":1608653925795,"results":"75","hashOfConfig":"62"},{"size":4479,"mtime":1608828086689,"results":"76","hashOfConfig":"62"},{"size":9859,"mtime":1608828086691,"results":"77","hashOfConfig":"62"},{"size":244,"mtime":1608827748872,"results":"78","hashOfConfig":"62"},{"size":2348,"mtime":1608828086692,"results":"79","hashOfConfig":"62"},{"size":2934,"mtime":1608829654091,"results":"80","hashOfConfig":"62"},{"size":383,"mtime":1608828086694,"results":"81","hashOfConfig":"62"},{"size":854,"mtime":1608827748871,"results":"82","hashOfConfig":"62"},{"size":593,"mtime":1608056473499,"results":"83","hashOfConfig":"62"},{"size":567,"mtime":1608653925788,"results":"84","hashOfConfig":"62"},{"size":561,"mtime":1608653925784,"results":"85","hashOfConfig":"62"},{"size":673,"mtime":1608653925787,"results":"86","hashOfConfig":"62"},{"size":2081,"mtime":1608828086690,"results":"87","hashOfConfig":"62"},{"size":1369,"mtime":1608827748869,"results":"88","hashOfConfig":"62"},{"size":1470,"mtime":1608827748870,"results":"89","hashOfConfig":"62"},{"size":1409,"mtime":1608827748870,"results":"90","hashOfConfig":"62"},{"size":645,"mtime":1608057103795,"results":"91","hashOfConfig":"92"},{"size":375,"mtime":1608056957743,"results":"93","hashOfConfig":"92"},{"size":335,"mtime":1608653985285,"results":"94","hashOfConfig":"92"},{"size":908,"mtime":1609067333851,"results":"95","hashOfConfig":"92"},{"size":5918,"mtime":1609091760280,"results":"96","hashOfConfig":"92"},{"size":1871,"mtime":1609091759050,"results":"97","hashOfConfig":"92"},{"size":473,"mtime":1608653985118,"results":"98","hashOfConfig":"92"},{"size":273,"mtime":1608653985205,"results":"99","hashOfConfig":"92"},{"size":1679,"mtime":1608653985189,"results":"100","hashOfConfig":"92"},{"size":346,"mtime":1609091760082,"results":"101","hashOfConfig":"92"},{"size":815,"mtime":1609091759539,"results":"102","hashOfConfig":"92"},{"size":273,"mtime":1608057103795,"results":"103","hashOfConfig":"92"},{"size":67397,"mtime":1608653985277,"results":"104","hashOfConfig":"92"},{"size":180671,"mtime":1608653985273,"results":"105","hashOfConfig":"92"},{"size":854,"mtime":1609067333919,"results":"106","hashOfConfig":"92"},{"size":244,"mtime":1609067333927,"results":"107","hashOfConfig":"92"},{"size":3011,"mtime":1609105128460,"results":"108","hashOfConfig":"92"},{"size":9866,"mtime":1609091759272,"results":"109","hashOfConfig":"92"},{"size":2934,"mtime":1609067333911,"results":"110","hashOfConfig":"92"},{"size":670,"mtime":1609091759817,"results":"111","hashOfConfig":"92"},{"size":2385,"mtime":1609091759380,"results":"112","hashOfConfig":"92"},{"size":1578,"mtime":1609091759126,"results":"113","hashOfConfig":"92"},{"size":673,"mtime":1608653985157,"results":"114","hashOfConfig":"92"},{"size":551,"mtime":1609091759677,"results":"115","hashOfConfig":"92"},{"size":567,"mtime":1608653985173,"results":"116","hashOfConfig":"92"},{"size":1398,"mtime":1609091759712,"results":"117","hashOfConfig":"92"},{"size":1467,"mtime":1609091759744,"results":"118","hashOfConfig":"92"},{"size":4088,"mtime":1609105778026,"results":"119","hashOfConfig":"92"},{"size":1366,"mtime":1609091759581,"results":"120","hashOfConfig":"92"},{"size":2629,"mtime":1609105422738,"results":"121","hashOfConfig":"92"},{"size":606,"mtime":1609103710544,"results":"122","hashOfConfig":"92"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1o6yqkq",{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},"dtu8tf",{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"183"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},"F:\\javaScript\\covid-dashboard\\covid-dashboard\\src\\index.js",[],"F:\\javaScript\\covid-dashboard\\covid-dashboard\\src\\reportWebVitals.js",[],"F:\\javaScript\\covid-dashboard\\covid-dashboard\\src\\redux\\store.js",[],"F:\\javaScript\\covid-dashboard\\covid-dashboard\\src\\App.js",[],"F:\\javaScript\\covid-dashboard\\covid-dashboard\\src\\redux\\countryList-reducer.js",[],"F:\\javaScript\\covid-dashboard\\covid-dashboard\\src\\components\\CovidMap\\CovidMapContainer.jsx",[],"F:\\javaScript\\covid-dashboard\\covid-dashboard\\src\\components\\CountryList\\CountryListContainer.jsx",[],"F:\\javaScript\\covid-dashboard\\covid-dashboard\\src\\components\\Header\\HeaderContainer.jsx",[],"F:\\javaScript\\covid-dashboard\\covid-dashboard\\src\\components\\CovidGraph\\CovidGraphContainer.jsx",[],"F:\\javaScript\\covid-dashboard\\covid-dashboard\\src\\components\\Footer\\FooterContainer.jsx",[],"F:\\javaScript\\covid-dashboard\\covid-dashboard\\src\\components\\GlobalCases\\GlobalCasesContainer.jsx",[],"F:\\javaScript\\covid-dashboard\\covid-dashboard\\src\\components\\CovidTable\\CovidTableContainer.jsx",[],"F:\\javaScript\\covid-dashboard\\covid-dashboard\\src\\redux\\countryList.js",[],"F:\\javaScript\\covid-dashboard\\covid-dashboard\\src\\redux\\countryInfoList.js",[],"F:\\javaScript\\covid-dashboard\\covid-dashboard\\src\\components\\CountryList\\CountryList.jsx",[],"F:\\javaScript\\covid-dashboard\\covid-dashboard\\src\\components\\CovidGraph\\CovidGraph.jsx",["245","246"],"F:\\javaScript\\covid-dashboard\\covid-dashboard\\src\\components\\Header\\Header.jsx",[],"F:\\javaScript\\covid-dashboard\\covid-dashboard\\src\\components\\CovidMap\\CovidMap.jsx",[],"F:\\javaScript\\covid-dashboard\\covid-dashboard\\src\\components\\CovidTable\\CovidTable.jsx",[],"F:\\javaScript\\covid-dashboard\\covid-dashboard\\src\\components\\GlobalCases\\GlobalCases.jsx",[],"F:\\javaScript\\covid-dashboard\\covid-dashboard\\src\\components\\Footer\\Footer.jsx",[],"F:\\javaScript\\covid-dashboard\\covid-dashboard\\src\\components\\CountryList\\CountrySearch\\CountrySearchContainer.jsx",[],"F:\\javaScript\\covid-dashboard\\covid-dashboard\\src\\components\\CovidTable\\CountryRecovered\\CountryRecoveredContainer.jsx",[],"F:\\javaScript\\covid-dashboard\\covid-dashboard\\src\\components\\CovidTable\\CountryDeaths\\CountryDeathsContainer.jsx",[],"F:\\javaScript\\covid-dashboard\\covid-dashboard\\src\\components\\CovidTable\\CountryLevel\\CountryLevelContainer.jsx",[],"F:\\javaScript\\covid-dashboard\\covid-dashboard\\src\\components\\CountryList\\CountrySearch\\CountrySearch.jsx",["247"],"F:\\javaScript\\covid-dashboard\\covid-dashboard\\src\\components\\CovidTable\\CountryDeaths\\CountryDeaths.jsx",[],"F:\\javaScript\\covid-dashboard\\covid-dashboard\\src\\components\\CovidTable\\CountryRecovered\\CountryRecovered.jsx",[],"F:\\javaScript\\covid-dashboard\\covid-dashboard\\src\\components\\CovidTable\\CountryLevel\\CountryLevel.jsx",[],"E:\\covid\\covid-dashboard\\covid-dashboard\\src\\index.js",[],["248","249"],"E:\\covid\\covid-dashboard\\covid-dashboard\\src\\reportWebVitals.js",[],"E:\\covid\\covid-dashboard\\covid-dashboard\\src\\redux\\store.js",[],"E:\\covid\\covid-dashboard\\covid-dashboard\\src\\App.js",[],"E:\\covid\\covid-dashboard\\covid-dashboard\\src\\redux\\countryList-reducer.js",[],"E:\\covid\\covid-dashboard\\covid-dashboard\\src\\components\\CountryList\\CountryListContainer.jsx",[],"E:\\covid\\covid-dashboard\\covid-dashboard\\src\\components\\CovidGraph\\CovidGraphContainer.jsx",[],"E:\\covid\\covid-dashboard\\covid-dashboard\\src\\components\\Footer\\FooterContainer.jsx",[],"E:\\covid\\covid-dashboard\\covid-dashboard\\src\\components\\CovidTable\\CovidTableContainer.jsx",[],"E:\\covid\\covid-dashboard\\covid-dashboard\\src\\components\\GlobalCases\\GlobalCasesContainer.jsx",[],"E:\\covid\\covid-dashboard\\covid-dashboard\\src\\components\\CovidMap\\CovidMapContainer.jsx",[],"E:\\covid\\covid-dashboard\\covid-dashboard\\src\\components\\Header\\HeaderContainer.jsx",[],"E:\\covid\\covid-dashboard\\covid-dashboard\\src\\redux\\countryList.js",[],"E:\\covid\\covid-dashboard\\covid-dashboard\\src\\redux\\countryInfoList.js",[],"E:\\covid\\covid-dashboard\\covid-dashboard\\src\\components\\Footer\\Footer.jsx",[],"E:\\covid\\covid-dashboard\\covid-dashboard\\src\\components\\Header\\Header.jsx",[],"E:\\covid\\covid-dashboard\\covid-dashboard\\src\\components\\CountryList\\CountryList.jsx",[],"E:\\covid\\covid-dashboard\\covid-dashboard\\src\\components\\CovidGraph\\CovidGraph.jsx",["250","251"],"import { Bar, Line } from 'react-chartjs-2';\r\nimport React, { Component } from 'react';\r\n\r\nimport axios from 'axios';\r\nimport styles from './CovidGraph.module.scss';\r\n\r\nexport default class CovidGraph extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.input = React.createRef();\r\n    this.isDaily = false;\r\n\r\n    this.state = {\r\n      chartData: {},\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getGlobalCasesData();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.activeCountry.country !== prevProps.activeCountry.country)\r\n      this.getCountryCasesData();\r\n  }\r\n\r\n  getGlobalCasesData(indicator = 'cases') {\r\n    axios\r\n      .get('https://disease.sh/v3/covid-19/historical/all?lastdays=366')\r\n      .then((response) => {\r\n        this.isDaily\r\n          ? this.setState({\r\n              chartData: {\r\n                data: {\r\n                  labels: Object.keys(response.data[indicator]),\r\n                  datasets: [\r\n                    {\r\n                      label: 'Global daily cases',\r\n                      data: Object.values(response.data[indicator]).map(\r\n                        (item, index, arr) => {\r\n                          if (arr[index + 1] > arr[index])\r\n                            return arr[index + 1] - arr[index];\r\n                        }\r\n                      ),\r\n                      backgroundColor: '#F2AA16',\r\n                      borderColor: '#F2AA16',\r\n                      borderWidth: 1,\r\n                    },\r\n                  ],\r\n                },\r\n                options: {\r\n                  title: {\r\n                    display: true,\r\n                    text: 'Global daily cases',\r\n                    fontColor: '#bdbdbd',\r\n                  },\r\n                  legend: { display: false },\r\n                  scales: {\r\n                    xAxes: [\r\n                      {\r\n                        type: 'time',\r\n                        time: {\r\n                          unit: 'day',\r\n                          unitStepSize: 30,\r\n                        },\r\n                        ticks: {\r\n                          autoSkip: false,\r\n                          maxRotation: 0,\r\n                          minRotation: 0,\r\n                          fontColor: '#bdbdbd',\r\n                        },\r\n                      },\r\n                    ],\r\n                    yAxes: [\r\n                      {\r\n                        ticks: { fontColor: '#bdbdbd' },\r\n                      },\r\n                    ],\r\n                  },\r\n                },\r\n              },\r\n            })\r\n          : this.setState({\r\n              chartData: {\r\n                data: {\r\n                  labels: Object.keys(response.data[indicator]),\r\n                  datasets: [\r\n                    {\r\n                      label: 'Global cases',\r\n                      data: Object.values(response.data[indicator]),\r\n                      pointBorderColor: '#F2AA16',\r\n                      pointBackgroundColor: '#F2AA16',\r\n                      pointWidth: 1,\r\n                    },\r\n                  ],\r\n                },\r\n                options: {\r\n                  title: {\r\n                    display: true,\r\n                    text: 'Global cases',\r\n                    fontColor: '#bdbdbd',\r\n                  },\r\n                  legend: { display: false },\r\n\r\n                  scales: {\r\n                    xAxes: [\r\n                      {\r\n                        type: 'time',\r\n                        time: {\r\n                          unit: 'day',\r\n                          unitStepSize: 30,\r\n                        },\r\n\r\n                        ticks: {\r\n                          autoSkip: false,\r\n                          maxRotation: 0,\r\n                          minRotation: 0,\r\n                          fontColor: '#bdbdbd',\r\n                        },\r\n                      },\r\n                    ],\r\n                    yAxes: [\r\n                      {\r\n                        ticks: {\r\n                          callback: (value) => `${value / 10e6}M`,\r\n                          fontColor: '#bdbdbd',\r\n                        },\r\n                      },\r\n                    ],\r\n                  },\r\n                },\r\n              },\r\n            });\r\n      });\r\n  }\r\n\r\n  getCountryCasesData(indicator = 'confirmed') {\r\n    axios\r\n      .get(\r\n        `https://api.covid19api.com/dayone/country/${this.props.activeCountry.country}/status/${indicator}`\r\n      )\r\n      .then((response) => {\r\n        this.isDaily\r\n          ? this.setState({\r\n              chartData: {\r\n                data: {\r\n                  labels: response.data.map((item) =>\r\n                    new Date(item.Date).toString().substring(4, 11)\r\n                  ),\r\n                  datasets: [\r\n                    {\r\n                      label: `${this.props.activeCountry.country} daily cases`,\r\n                      data: response.data\r\n                        .map((item) => item.Cases)\r\n                        .map((item, index, arr) => {\r\n                          if (arr[index + 1] > arr[index])\r\n                            return arr[index + 1] - arr[index];\r\n                        }),\r\n                      backgroundColor: '#F2AA16',\r\n                      borderColor: '#F2AA16',\r\n                      borderWidth: 1,\r\n                    },\r\n                  ],\r\n                },\r\n                options: {\r\n                  title: {\r\n                    display: true,\r\n                    text: `${this.props.activeCountry.country} daily cases`,\r\n                    fontColor: '#bdbdbd',\r\n                  },\r\n                  legend: { display: false },\r\n                  scales: {\r\n                    xAxes: [\r\n                      {\r\n                        type: 'time',\r\n                        time: {\r\n                          unit: 'day',\r\n                          unitStepSize: 30,\r\n                        },\r\n                        ticks: {\r\n                          autoSkip: false,\r\n                          maxRotation: 0,\r\n                          minRotation: 0,\r\n                          fontColor: '#bdbdbd',\r\n                        },\r\n                      },\r\n                    ],\r\n                    yAxes: [{ ticks: { fontColor: '#bdbdbd' } }],\r\n                  },\r\n                },\r\n              },\r\n            })\r\n          : this.setState({\r\n              chartData: {\r\n                data: {\r\n                  labels: response.data.map((item) =>\r\n                    new Date(item.Date).toString().substring(4, 11)\r\n                  ),\r\n                  datasets: [\r\n                    {\r\n                      label: 'Country cases',\r\n                      data: response.data.map((item) => item.Cases),\r\n                      pointBorderColor: '#F2AA16',\r\n                      pointBackgroundColor: '#F2AA16',\r\n                      pointWidth: 1,\r\n                    },\r\n                  ],\r\n                },\r\n                options: {\r\n                  title: {\r\n                    display: true,\r\n                    text: `${this.props.activeCountry.country}  cases`,\r\n                    fontColor: '#bdbdbd',\r\n                  },\r\n                  legend: { display: false },\r\n                  scales: {\r\n                    xAxes: [\r\n                      {\r\n                        type: 'time',\r\n                        time: {\r\n                          unit: 'day',\r\n                          unitStepSize: 30,\r\n                        },\r\n                        ticks: {\r\n                          autoSkip: false,\r\n                          maxRotation: 0,\r\n                          minRotation: 0,\r\n                          fontColor: '#bdbdbd',\r\n                        },\r\n                      },\r\n                    ],\r\n                    yAxes: [{ ticks: { fontColor: '#bdbdbd' } }],\r\n                  },\r\n                },\r\n              },\r\n            });\r\n      });\r\n  }\r\n\r\n  changeInput(e) {\r\n    const target = e.target;\r\n    this.isDaily = target.type === 'checkbox' ? target.checked : target.value;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={styles.covidGraph}>\r\n        {this.isDaily ? (\r\n          <Bar\r\n            data={this.state.chartData.data}\r\n            options={this.state.chartData.options}\r\n            width={'100%'}\r\n            height={'100%'}\r\n          />\r\n        ) : (\r\n          <Line\r\n            data={this.state.chartData.data}\r\n            options={this.state.chartData.options}\r\n            width={'100%'}\r\n            height={'100%'}\r\n          />\r\n        )}\r\n        <div>\r\n          <button\r\n            id='cases'\r\n            onClick={(event) =>\r\n              this.props.activeCountry\r\n                ? this.getCountryCasesData(event.target.innerText)\r\n                : this.getGlobalCasesData(event.target.id)\r\n            }\r\n          >\r\n            confirmed\r\n          </button>\r\n          <button\r\n            id='deaths'\r\n            onClick={(event) =>\r\n              this.props.activeCountry\r\n                ? this.getCountryCasesData(event.target.id)\r\n                : this.getGlobalCasesData(event.target.id)\r\n            }\r\n          >\r\n            deaths\r\n          </button>\r\n          <button\r\n            id='recovered'\r\n            onClick={(event) =>\r\n              this.props.activeCountry\r\n                ? this.getCountryCasesData(event.target.id)\r\n                : this.getGlobalCasesData(event.target.id)\r\n            }\r\n          >\r\n            recovered\r\n          </button>\r\n          <label>\r\n            Daily\r\n            <input\r\n              type='checkbox'\r\n              ref={this.input}\r\n              onChange={(e) => this.changeInput(e)}\r\n            />\r\n          </label>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","E:\\covid\\covid-dashboard\\covid-dashboard\\src\\components\\CovidTable\\CovidTable.jsx",[],"E:\\covid\\covid-dashboard\\covid-dashboard\\src\\components\\GlobalCases\\GlobalCases.jsx",[],"E:\\covid\\covid-dashboard\\covid-dashboard\\src\\components\\CovidMap\\CovidMap.jsx",[],"E:\\covid\\covid-dashboard\\covid-dashboard\\src\\components\\CountryList\\CountrySearch\\CountrySearchContainer.jsx",[],"E:\\covid\\covid-dashboard\\covid-dashboard\\src\\components\\CovidTable\\CountryLevel\\CountryLevelContainer.jsx",[],"E:\\covid\\covid-dashboard\\covid-dashboard\\src\\components\\CovidTable\\CountryDeaths\\CountryDeathsContainer.jsx",[],"E:\\covid\\covid-dashboard\\covid-dashboard\\src\\components\\CovidTable\\CountryRecovered\\CountryRecoveredContainer.jsx",[],"E:\\covid\\covid-dashboard\\covid-dashboard\\src\\components\\CovidTable\\CountryLevel\\CountryLevel.jsx",[],"E:\\covid\\covid-dashboard\\covid-dashboard\\src\\components\\CovidTable\\CountryRecovered\\CountryRecovered.jsx",[],"E:\\covid\\covid-dashboard\\covid-dashboard\\src\\components\\CountryList\\CountrySearch\\CountrySearch.jsx",["252"],"E:\\covid\\covid-dashboard\\covid-dashboard\\src\\components\\CovidTable\\CountryDeaths\\CountryDeaths.jsx",[],"E:\\covid\\covid-dashboard\\covid-dashboard\\src\\components\\CountryList\\ListCountry\\ListCountry.jsx",[],"E:\\covid\\covid-dashboard\\covid-dashboard\\src\\components\\CountryList\\ListCountry\\ListCountryConteiner.jsx",[],{"ruleId":"253","severity":1,"message":"254","line":41,"column":44,"nodeType":"255","messageId":"256","endLine":41,"endColumn":46},{"ruleId":"253","severity":1,"message":"254","line":156,"column":49,"nodeType":"255","messageId":"256","endLine":156,"endColumn":51},{"ruleId":"253","severity":1,"message":"254","line":38,"column":52,"nodeType":"255","messageId":"256","endLine":38,"endColumn":54},{"ruleId":"257","replacedBy":"258"},{"ruleId":"259","replacedBy":"260"},{"ruleId":"253","severity":1,"message":"254","line":41,"column":44,"nodeType":"255","messageId":"256","endLine":41,"endColumn":46},{"ruleId":"253","severity":1,"message":"254","line":156,"column":49,"nodeType":"255","messageId":"256","endLine":156,"endColumn":51},{"ruleId":"253","severity":1,"message":"254","line":100,"column":56,"nodeType":"255","messageId":"256","endLine":100,"endColumn":58},"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-native-reassign",["261"],"no-negated-in-lhs",["262"],"no-global-assign","no-unsafe-negation"]