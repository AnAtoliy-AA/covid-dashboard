[{"E:\\covid\\covid-dashboard\\covid-dashboard\\src\\index.js":"1","E:\\covid\\covid-dashboard\\covid-dashboard\\src\\App.js":"2","E:\\covid\\covid-dashboard\\covid-dashboard\\src\\reportWebVitals.js":"3","E:\\covid\\covid-dashboard\\covid-dashboard\\src\\redux\\store.js":"4","E:\\covid\\covid-dashboard\\covid-dashboard\\src\\redux\\countryList-reducer.js":"5","E:\\covid\\covid-dashboard\\covid-dashboard\\src\\components\\CountryList\\CountryListContainer.jsx":"6","E:\\covid\\covid-dashboard\\covid-dashboard\\src\\components\\CovidGraph\\CovidGraph.jsx":"7","E:\\covid\\covid-dashboard\\covid-dashboard\\src\\components\\CovidTable\\CovidTableContainer.jsx":"8","E:\\covid\\covid-dashboard\\covid-dashboard\\src\\components\\CovidMap\\CovidMap.jsx":"9","E:\\covid\\covid-dashboard\\covid-dashboard\\src\\components\\GlobalCases\\GlobalCasesContainer.jsx":"10","E:\\covid\\covid-dashboard\\covid-dashboard\\src\\components\\Header\\HeaderContainer.jsx":"11","E:\\covid\\covid-dashboard\\covid-dashboard\\src\\components\\GlobalCases\\GlobalCases.jsx":"12","E:\\covid\\covid-dashboard\\covid-dashboard\\src\\components\\Header\\Header.jsx":"13","E:\\covid\\covid-dashboard\\covid-dashboard\\src\\components\\CountryList\\CountryList.jsx":"14","E:\\covid\\covid-dashboard\\covid-dashboard\\src\\components\\CovidTable\\CovidTable.jsx":"15","E:\\covid\\covid-dashboard\\covid-dashboard\\src\\components\\CountryList\\CountrySearch\\CountrySearchContainer.jsx":"16","E:\\covid\\covid-dashboard\\covid-dashboard\\src\\components\\CovidTable\\CountryDeaths\\CountryDeathsContainer.jsx":"17","E:\\covid\\covid-dashboard\\covid-dashboard\\src\\components\\CovidTable\\CountryLevel\\CountryLevelContainer.jsx":"18","E:\\covid\\covid-dashboard\\covid-dashboard\\src\\components\\CovidTable\\CountryRecovered\\CountryRecoveredContainer.jsx":"19","E:\\covid\\covid-dashboard\\covid-dashboard\\src\\components\\CountryList\\CountrySearch\\CountrySearch.jsx":"20","E:\\covid\\covid-dashboard\\covid-dashboard\\src\\components\\CovidTable\\CountryDeaths\\CountryDeaths.jsx":"21","E:\\covid\\covid-dashboard\\covid-dashboard\\src\\components\\CovidTable\\CountryLevel\\CountryLevel.jsx":"22","E:\\covid\\covid-dashboard\\covid-dashboard\\src\\components\\CovidTable\\CountryRecovered\\CountryRecovered.jsx":"23"},{"size":645,"mtime":1608057103795,"results":"24","hashOfConfig":"25"},{"size":829,"mtime":1608135556689,"results":"26","hashOfConfig":"25"},{"size":375,"mtime":1608056957743,"results":"27","hashOfConfig":"25"},{"size":418,"mtime":1608057103795,"results":"28","hashOfConfig":"25"},{"size":3702,"mtime":1608057103795,"results":"29","hashOfConfig":"25"},{"size":1729,"mtime":1608057103748,"results":"30","hashOfConfig":"25"},{"size":264,"mtime":1608057103763,"results":"31","hashOfConfig":"25"},{"size":1480,"mtime":1608057103779,"results":"32","hashOfConfig":"25"},{"size":255,"mtime":1608056957728,"results":"33","hashOfConfig":"25"},{"size":403,"mtime":1608057103795,"results":"34","hashOfConfig":"25"},{"size":273,"mtime":1608057103795,"results":"35","hashOfConfig":"25"},{"size":344,"mtime":1608057103779,"results":"36","hashOfConfig":"25"},{"size":232,"mtime":1608063559437,"results":"37","hashOfConfig":"25"},{"size":3191,"mtime":1608057103748,"results":"38","hashOfConfig":"25"},{"size":1904,"mtime":1608057103779,"results":"39","hashOfConfig":"25"},{"size":593,"mtime":1608057103763,"results":"40","hashOfConfig":"25"},{"size":486,"mtime":1608057103763,"results":"41","hashOfConfig":"25"},{"size":598,"mtime":1608057103779,"results":"42","hashOfConfig":"25"},{"size":492,"mtime":1608057103779,"results":"43","hashOfConfig":"25"},{"size":1801,"mtime":1608057103763,"results":"44","hashOfConfig":"25"},{"size":801,"mtime":1608057103763,"results":"45","hashOfConfig":"25"},{"size":1170,"mtime":1608057103779,"results":"46","hashOfConfig":"25"},{"size":896,"mtime":1608057103779,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"dtu8tf",{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"60"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"60"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"E:\\covid\\covid-dashboard\\covid-dashboard\\src\\index.js",[],"E:\\covid\\covid-dashboard\\covid-dashboard\\src\\App.js",[],"E:\\covid\\covid-dashboard\\covid-dashboard\\src\\reportWebVitals.js",[],"E:\\covid\\covid-dashboard\\covid-dashboard\\src\\redux\\store.js",[],"E:\\covid\\covid-dashboard\\covid-dashboard\\src\\redux\\countryList-reducer.js",[],"E:\\covid\\covid-dashboard\\covid-dashboard\\src\\components\\CountryList\\CountryListContainer.jsx",[],["97","98"],"E:\\covid\\covid-dashboard\\covid-dashboard\\src\\components\\CovidGraph\\CovidGraph.jsx",[],"E:\\covid\\covid-dashboard\\covid-dashboard\\src\\components\\CovidTable\\CovidTableContainer.jsx",["99"],"import { setCountriesAbsoluteDataActionCreator, setCountriesRelativeDataActionCreator, setGlobalAbsoluteDataActionCreator, setGlobalRelativeDataActionCreator, setPopulationTypeValueActionCreator } from '../../redux/countryList-reducer';\r\n\r\nimport CovidTable from './CovidTable';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        worldWideData: state.countryList.worldWideData,\r\n        covidTableWorldWideData: state.countryList.covidTableWorldWideData,\r\n        countryList: state.countryList.countryList,\r\n        populationValueType: state.countryList.populationValueType,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setPopulationTypeValue: (populationValueType) => {\r\n            dispatch(setPopulationTypeValueActionCreator(populationValueType))\r\n        },\r\n        //     dispatch(setCountriesAbsoluteDataActionCreator(countries))\r\n        // },\r\n        setCountriesRelativeData: (countryList) => {\r\n            dispatch(setCountriesRelativeDataActionCreator(countryList))\r\n        },\r\n        setGlobalAbsoluteData: (covidTableWorldWideData) => {\r\n            dispatch(setGlobalAbsoluteDataActionCreator(covidTableWorldWideData))\r\n        },\r\n        setGlobalRelativeData: (covidTableWorldWideData) => {\r\n            dispatch(setGlobalRelativeDataActionCreator(covidTableWorldWideData))\r\n        },\r\n\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CovidTable);","E:\\covid\\covid-dashboard\\covid-dashboard\\src\\components\\CovidMap\\CovidMap.jsx",[],"E:\\covid\\covid-dashboard\\covid-dashboard\\src\\components\\GlobalCases\\GlobalCasesContainer.jsx",[],"E:\\covid\\covid-dashboard\\covid-dashboard\\src\\components\\Header\\HeaderContainer.jsx",[],"E:\\covid\\covid-dashboard\\covid-dashboard\\src\\components\\GlobalCases\\GlobalCases.jsx",[],"E:\\covid\\covid-dashboard\\covid-dashboard\\src\\components\\Header\\Header.jsx",[],"E:\\covid\\covid-dashboard\\covid-dashboard\\src\\components\\CountryList\\CountryList.jsx",[],"E:\\covid\\covid-dashboard\\covid-dashboard\\src\\components\\CovidTable\\CovidTable.jsx",[],"E:\\covid\\covid-dashboard\\covid-dashboard\\src\\components\\CountryList\\CountrySearch\\CountrySearchContainer.jsx",[],"E:\\covid\\covid-dashboard\\covid-dashboard\\src\\components\\CovidTable\\CountryDeaths\\CountryDeathsContainer.jsx",[],"E:\\covid\\covid-dashboard\\covid-dashboard\\src\\components\\CovidTable\\CountryLevel\\CountryLevelContainer.jsx",[],"E:\\covid\\covid-dashboard\\covid-dashboard\\src\\components\\CovidTable\\CountryRecovered\\CountryRecoveredContainer.jsx",[],"E:\\covid\\covid-dashboard\\covid-dashboard\\src\\components\\CountryList\\CountrySearch\\CountrySearch.jsx",["100","101"],"import React, { Component } from 'react';\r\nimport styles from './CountrySearch.module.scss';\r\n\r\nexport default class CountrySearch extends Component {\r\n  state = {\r\n    searchTerm: '',\r\n  };\r\n\r\n  selectCountry(country) {\r\n    this.setState({ searchTerm: country });\r\n  }\r\n\r\n  onCountryChanged(activeCountry) {\r\n    this.props.setActiveCountry(activeCountry);\r\n    this.setState({ searchTerm: '' });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={styles.countrySearch}>\r\n        <input\r\n          type='text'\r\n          className={styles.search}\r\n          placeholder='Search for a Country'\r\n          value={this.state.searchTerm}\r\n          onInput={(event) => this.selectCountry(event.target.value)}\r\n        />\r\n        <div\r\n          className={\r\n            this.state.searchTerm.length !== 0\r\n              ? styles.results\r\n              : styles.results__hide\r\n          }\r\n        >\r\n          <ul className={styles.countries}>\r\n            {this.props.countryList.map((country) => {\r\n              if (country.Slug.includes(this.state.searchTerm.toLowerCase())) {\r\n                return (\r\n                  <li\r\n                    key={country.CountryCode}\r\n                    className={styles.countryItem}\r\n                    onClick={() => this.onCountryChanged(country)}\r\n                  >\r\n                    <img\r\n                      src={`https://www.countryflags.io/${country.CountryCode}/shiny/64.png`}\r\n                      className={styles.countryItem_flag}\r\n                    />\r\n                    <h3 className={styles.countryItem_name}>\r\n                      {country.Country}\r\n                    </h3>\r\n                  </li>\r\n                );\r\n              }\r\n            })}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","E:\\covid\\covid-dashboard\\covid-dashboard\\src\\components\\CovidTable\\CountryDeaths\\CountryDeaths.jsx",[],"E:\\covid\\covid-dashboard\\covid-dashboard\\src\\components\\CovidTable\\CountryLevel\\CountryLevel.jsx",[],"E:\\covid\\covid-dashboard\\covid-dashboard\\src\\components\\CovidTable\\CountryRecovered\\CountryRecovered.jsx",[],{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":1,"column":10,"nodeType":"108","messageId":"109","endLine":1,"endColumn":47},{"ruleId":"110","severity":1,"message":"111","line":36,"column":51,"nodeType":"112","messageId":"113","endLine":36,"endColumn":53},{"ruleId":"114","severity":1,"message":"115","line":44,"column":21,"nodeType":"116","endLine":47,"endColumn":23},"no-native-reassign",["117"],"no-negated-in-lhs",["118"],"no-unused-vars","'setCountriesAbsoluteDataActionCreator' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]